<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.know-data.framework</groupId>
    <artifactId>know-data-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>know-data-core</module>
        <module>know-data-study-parent</module>
        <module>know-data-event</module>
        <module>know-data-test</module>
        <module>know-data-data-dict</module>
        <module>know-data-site-server</module>
        <module>know-data-id-generator</module>
        <module>know-data-bms</module>
        <module>know-data-executor</module>
        <module>know-data-bdp-servers</module>
        <module>know-data-study-parent/know-data-study-email</module>
        <!--<module>know-data-study-parent/know-data-stud-fault-tree-analysis</module>-->
    </modules>

    <name>know-data-parent</name>
    <description>数据知音，做数据之友(Data's bosom friend, to be a friend to data.)</description>
    <url>https://know-data.com</url>

    <properties>
        <!-- ########## <L1> variables & configuration [start] ########### -->

        <!-- <L2> project [start] -->
        <!-- <applicationStartupClass>com.knowdata.xx.yy.zz.XXApplication</applicationStartupClass> -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <!-- <L2> project [end] -->

        <!-- <L2> jdk [start] -->
        <java.version>1.8</java.version>
        <!-- <L2> jdk [end] -->

        <!--@reference-doc
            [1] sonar代码扫描排除不必要文件 - CSDN - https://blog.csdn.net/weixin_45342958/article/details/94738366
            [2] 将Sonar配置为从Maven pom.xml中排除文件 - h5w3 - https://www.h5w3.com/qa/427775.html
        -->
        <!--<sonar.inclusions>
            src/main/java/cn/knowdata/xx/biz/**,
            src/main/java/cn/knowdata/xx/biz/**/service/**
        </sonar.inclusions> -->
        <!--<sonar.exclusions>-->
        <!--src/main/java/cn/knowdata/xx/common/**,-->
        <!--src/main/java/cn/knowdata/xx/model/**-->
        <!--</sonar.exclusions>-->

        <!-- <L2> maven variables [start] -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!--
        这个属性被3个插件使用，跳过testResources/testCompile/test。不处理测试，会快一点。
        maven-resources-plugin::testResources
        maven-compiler-plugin::testCompile
        maven-surefire-plugin::test
        -->
        <!--<maven.test.skip>true</maven.test.skip>-->
        <!--maven.javadoc.skip=true=>避免:MavenReportException:ErrorwhilegeneratingJavadoc|https://blog.csdn.net/qq_40595922/article/details/120872697-->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <!-- <L2> maven variables [end] -->

        <!-- ########## <L1> variables & configuration [end] ########### -->

        <!-- ########## <L1> plugin [start] ########### -->

        <!-- <L2> maven plugins [start] -->
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
        <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-deploy-plugin-version>2.8.2</maven-deploy-plugin-version>
        <maven-site-plugin.version>3.7.1</maven-site-plugin.version>
        <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
        <appassembler-maven-plugin.version>2.1.0</appassembler-maven-plugin.version>
        <!-- <L2> maven plugins [end] -->

        <!-- <L2> test & code quality [start] -->
        <!-- sonar : code quality scan -->
        <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
        <!-- jacoco : code quality -->
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <!-- <L2> test & code quality [end] -->

        <!-- <L2> other plugins [start] -->
        <!-- 2.1.15 / 4.0.0 : git-commit -->
        <git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
        <!-- <L2> other plugins [end] -->

        <!-- ########## <L1> plugin [end] ########### -->

        <!-- ########## <L1> dependency [start] ########### -->

        <!-- ********** <L2> language-level basic dependency [start] ********** -->
        <!-- <L3> other language [start] -->
        <!-- markdown : other language -->
        <commonmark-java.version>0.9.0</commonmark-java.version>

        <!-- jinjava : other language -->
        <jinjava.version>2.5.6</jinjava.version>

        <!-- groovy : other language -->
        <grovvy.version>3.0.7</grovvy.version>

        <!-- <L3> other language [end] -->

        <!-- <L3> programing helper [start] -->
        <!-- lombok : programing helper
            @version 1.18.22 / RELEASE / ...
        -->
        <lombok.version>1.18.22</lombok.version>
        <!-- <L3> programing helper [start] -->

        <!-- <L3> language-level' toolkit [start] -->
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-codec.version>1.15</commons-codec.version>

        <hutool.version>5.8.4</hutool.version>
        <!-- <L3> language-level' toolkit [end] -->

        <!-- <L3> mock framework [start] -->
        <jmockdata.version>4.3.0</jmockdata.version>
        <mockito.version>3.4.0</mockito.version>
        <!-- <L3> mock framework [end] -->

        <!-- <L3> test & code quality [start] -->
        <!-- junit : unit test -->
        <junit.version>4.13.1</junit.version>
        <!-- <L3> test & code quality [end] -->

        <!-- <L3> log [start] -->

        <!-- slf4j / log facade framework : log -->
        <slf4j.version>1.7.25</slf4j.version>
        <!-- log4j2 / log implements framework : log -->
        <!-- 1.x:log4j(log4j.properties)|2.x:log4j2(支持log4j2.properties中动态读取env/环境变量等特性) -->
        <log4j.version>2.13.3</log4j.version>
        <spring-boot-starter-log4j.version>1.3.8.RELEASE</spring-boot-starter-log4j.version>

        <!-- <L3> log [end] -->

        <!-- <L3> os [start] -->
        <oshi.version>6.1.5</oshi.version>
        <jna.version>5.10.0</jna.version>
        <sigar.version>1.6.4</sigar.version>
        <!-- <L3> os [end] -->

        <!-- ********** <L2> language-level basic dependency [end] ********** -->

        <!-- ********** <L2> data & database & orm [start] ********** -->

        <!-- <L3> cache [start] -->
        <guava.version>28.0-jre</guava.version>
        <redis.jdbc.version>3.1.0</redis.jdbc.version>
        <!-- <L3> cache [end] -->

        <!-- <L3> relationship database (RDBS) [start] -->
        <mysql.jdbc.version>8.0.28</mysql.jdbc.version>
        <influxdb.jdbc.version>2.22</influxdb.jdbc.version>
        <!-- 0.3.2 / 0.4.6 / 0.5.0 -->
        <clickhouse.jdbc.version>0.3.2</clickhouse.jdbc.version>
        <!-- <L3> relationship database (RDBS) [end] -->

        <!-- <L3> graph database [start] -->
        <neo4j.jdbc.version>4.2.0</neo4j.jdbc.version>
        <!-- <L3> graph database [end] -->

        <!-- <L3> data channel [start] -->
        <kafka.clients.version>2.4.1</kafka.clients.version>
        <!-- <L3> data channel [end] -->

        <!-- <L3> search engine database [start] -->
        <!-- elasticsearch - opendistro-sql plugin : search engine database -->
        <opendistro-sql-jdbc.version>1.12.0.0</opendistro-sql-jdbc.version>
        <!-- <L3> search engine database [end] -->

        <!-- <L3> file data [start] -->
        <!-- excel/csv : file data -->
        <easyexcel.version>3.1.5</easyexcel.version>
        <!-- thumbnailator / image file handle : file data -->
        <net.coobird.thumbnailator.version>0.4.8</net.coobird.thumbnailator.version>
        <!-- <L3> file data [end] -->

        <!-- <L3> data serializable & json [start] -->
        <!-- json : data serialization -->
        <fastjson2.version>2.0.42</fastjson2.version>

        <jackson.version>2.13.4</jackson.version>
        <jackson-dataformat-xml.version>2.13.4</jackson-dataformat-xml.version>
        <!-- <L3> data serializable & json [end] -->

        <!-- 2.8.5 -->
        <gson.version>2.8.5</gson.version>

        <!-- <L3> database connection management [start] -->
        <dbpool-druid.version>1.2.8</dbpool-druid.version>
        <!-- <L3> database connection management [end] -->

        <!-- <L3> orm [start] -->

        <!-- mybatis : orm -->
        <!-- 3.5.10 / 3.5.13 -->
        <mybatis.version>3.5.13</mybatis.version>
        <!-- mybatis-plus:3.5.2 inner mybatis version = 3.5.10 -->
        <!-- 3.5.2 / 3.5.4 | https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-extension/3.5.4 -->
        <mybatis-plus.version>3.5.4</mybatis-plus.version>
        <mybatis-spring.version>2.1.1</mybatis-spring.version>
        <mybatis-spring-boot-starter>1.4.7</mybatis-spring-boot-starter>
        <pagehelper-spring-boot-starter>2.3.1</pagehelper-spring-boot-starter>

        <!-- <L3> orm [end] -->

        <!-- ********** <L2> data & database & orm [end] ********** -->

        <!-- ********** <L2> system-level basic framework [start] -->
        <!-- | spring | -->
        <spring.version>5.2.15.RELEASE</spring.version>
        <spring-boot.version>2.3.12.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR12</spring-cloud.version>
        <spring-cloud-context.version>2.2.9.RELEASE</spring-cloud-context.version>
        <spring-cloud-openfeign.version>2.2.9.RELEASE</spring-cloud-openfeign.version>
        <spring-cloud-alibaba.version>2.2.7.RELEASE</spring-cloud-alibaba.version>

        <!-- <L3> data validation framework [start] | 数据校验框架 - https://www.cnblogs.com/johnnyzen/p/17824475.html -->
        <javax.validation-api.version>2.0.1.FINAL</javax.validation-api.version>

        <jakarta.validation-api.version>2.0.2</jakarta.validation-api.version>
        <hibernate-validator.version>6.1.7.Final</hibernate-validator.version>
        <glassfish.jakarta.el.version>3.0.3</glassfish.jakarta.el.version>
        <!-- <L3> data validation framework [end] -->


        <!-- <L3> web [start] -->
        <!-- servlet : web -->
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <!-- <L3> web [end] -->

        <!-- <L3> api document management [start] -->
        <!-- swagger : api document management -->
        <!-- [v1] 1.5.22 [v2] 2.0.0-rc2 / [v3] 2.1.2 -->
        <swagger.version>1.5.22</swagger.version>
        <swagger.v2.version>2.0.0-rc2</swagger.v2.version>
        <swagger.v3.version>2.1.2</swagger.v3.version>
        <springforx-swagger.version>3.0.0</springforx-swagger.version>
        <swagger-bootstrap-ui.version>1.9.6</swagger-bootstrap-ui.version>
        <!--        <swagger.version>2.0.0-rc2</swagger.version>-->
        <!--        <springforx-swagger.version>2.9.2</springforx-swagger.version>-->
        <!--        <swagger-bootstrap-ui.version>1.9.6</swagger-bootstrap-ui.version>-->

        <!-- knife4j / Swagger-UI API Document : api document management -->
        <knife4j-annotations.version>3.0.3</knife4j-annotations.version>
        <!-- <L3> api document management [end] -->

        <!-- <L3> system communication & system security [start] -->
        <!-- jwt component -->
        <jwt.version>0.11.2</jwt.version>
        <jjwt-gson.version>0.11.5</jjwt-gson.version>
        <!-- <L3> system communication & system security [end] -->

        <!-- ********** <L2> system-level basic framework [end] -->

        <!-- ********** <L2> spring boot/cloud framework related components [start] ********** -->

        <!-- nacos : configuration center & register center -->
        <nacos-config-spring-boot-starter.version>0.2.10</nacos-config-spring-boot-starter.version>
        <nacos-discovery-spring-boot-starter.version>0.2.10</nacos-discovery-spring-boot-starter.version>

        <!-- feign : service call -->
        <openfeign.version>10.4.0</openfeign.version>

        <!-- skywalking : trace request -->
        <skywalking.apm-application-toolkit.version>8.7.0</skywalking.apm-application-toolkit.version>

        <!-- ********** <L2> spring boot/cloud framework related components [end] ********** -->


        <!-- ********** <L2> third-party-service [start] ********** -->
        <alibabacloud-dysmsapi.version>2.0.23</alibabacloud-dysmsapi.version>
        <oss.qiniu-java-sdk.version>[7.7.0, 7.10.99]</oss.qiniu-java-sdk.version>
        <!-- ********** <L2> third-party-service [end] ********** -->


        <!-- ********** <L2> other dependency [start] ********** -->

        <javax.mail.version>1.6.2</javax.mail.version>

        <!-- ********** <L2> other dependency [end] ********** -->

        <!-- ########## <L1> dependency [end] ########### -->

    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ********** language-level basic dependency ********** -->
            <!-- | other language | -->
            <!-- markdown : other language
                @functionMarkdownJava解析器
                @reference-doc
                    [1]commonmark-java-codingdict - https://www.codingdict.com/os/software/51515 -->
            <dependency>
                <groupId>com.atlassian.commonmark</groupId>
                <artifactId>commonmark</artifactId>
                <version>${commonmark-java.version}</version>
            </dependency>

            <!-- jinjava : other language -->
            <dependency>
                <groupId>com.hubspot.jinjava</groupId>
                <artifactId>jinjava</artifactId>
                <!-- 2.5.6 -->
                <version>${jinjava.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>guava</artifactId>
                        <groupId>com.google.guava</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- groovy : other language -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <type>pom</type>
                <version>${grovvy.version}</version>
            </dependency>

            <!-- | programing helper | -->
            <!-- lombok : programing helper -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>compile</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation-api.version}</version>
            </dependency>

            <!-- | language-level' toolkit | -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- https://search.maven.org/artifact/commons-beanutils/commons-beanutils/1.9.3/jar -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <!-- https://search.maven.org/artifact/commons-codec/commons-codec/1.15/jar -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <!-- hutool-common util dependency -->
            <!-- url:https://www.hutool.cn//https://www.hutool.cn/docs/ -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- | mock framework | -->
            <dependency>
                <groupId>com.github.jsonzou</groupId>
                <artifactId>jmockdata</artifactId>
                <version>${jmockdata.version}</version>
                <scope>test</scope>
            </dependency>
            <!--<dependency>-->
            <!--<groupId>org.mockito</groupId>-->
            <!--<artifactId>mockito-all</artifactId>-->
            <!--1.10.19-->
            <!--<version>${mockito.version}</version>-->
            <!--<scope>test</scope>-->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.mockito</groupId>-->
            <!--<artifactId>mockito-core</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <!-- 3.4.0 -->
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>mockito-core</artifactId>
                        <groupId>org.mockito</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- | test & code quality | -->
            <!-- junit : unit test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- | log | -->
            <!-- slf4j / log facade framework : log -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- log4j2 / log implements framework : log -->
            <!--<dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            </dependency>-->

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!-- JUL ：= java.util.logging ：= JDK 自带的日志框架
                @reference-doc
                    [1] JUL和Log4j - jianshu - https://www.jianshu.com/p/faa4bd13ab39
            -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!--https://central.sonatype.dev/artifact/org.springframework.boot/spring-boot-starter-log4j/1.3.8.RELEASE/overview-->
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j</artifactId>
                <version>${spring-boot-starter-log4j.version}</version>
            </dependency> -->

            <!--https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2[√]-->
            <!--https://central.sonatype.dev/artifact/org.springframework.boot/spring-boot-starter-log4j2/1.3.8.RELEASE/overview[X]-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- | os | -->
            <!-- oshi[start] -->
            <!-- Java免费的基于JNA的操作系统和硬件信息库 -->
            <!-- https://mvnrepository.com/artifact/com.github.oshi/oshi-core -->
            <!--            <dependency>-->
            <!--                <groupId>com.github.oshi</groupId>-->
            <!--                <artifactId>oshi-core</artifactId>-->
            <!--                <version>${oshi.version}</version>-->
            <!--            </dependency>-->
            <!-- JNA（JavaNativeAccess）提供一组Java工具类用于在运行期间动态访问系统本地库（nativelibrary：如Window的dll）而不需要编写任何Native/JNI代码。
            开发人员只要在一个java接口中描述目标nativelibrary的函数与结构，JNA将自动实现Java接口到nativefunction的映射。 -->
            <!--            <dependency>-->
            <!--                <groupId>net.java.dev.jna</groupId>-->
            <!--                <artifactId>jna</artifactId>-->
            <!--                <version>${jna.version}</version>-->
            <!--            </dependency>-->
            <!-- 为了解决JNA冲突问题而引入 -->
            <!--            <dependency>-->
            <!--                <groupId>net.java.dev.jna</groupId>-->
            <!--                <artifactId>jna-platform</artifactId>-->
            <!--                <version>${jna.version}</version>-->
            <!--            </dependency>-->
            <!--oshi[end]-->

            <!-- sigar[start] -->
            <dependency>
                <groupId>org.fusesource</groupId>
                <artifactId>sigar</artifactId>
                <version>${sigar.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- sigar[end] -->

            <!-- ********** data & database & orm ********** -->

            <!-- | cache | -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- redis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${redis.jdbc.version}</version>
            </dependency>

            <!-- | relationship database | -->
            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.jdbc.version}</version>
            </dependency>

            <!-- clickhouse
                [1] https://github.com/ClickHouse/clickhouse-jdbc
                [2] https://search.maven.org/artifact/ru.yandex.clickhouse/clickhouse-jdbc -->
            <!--<dependency>
            <groupId>ru.yandex.clickhouse</groupId>
            <artifactId>clickhouse-jdbc</artifactId>
            <version>${clickhouse.jdbc.version}</version>
            </dependency>-->
            <dependency>
                <groupId>com.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse.jdbc.version}</version>
            </dependency>
            <!-- https://github.com/ClickHouse/clickhouse-jdbc/tree/v0.3.2/clickhouse-client -->
            <dependency>
                <groupId>com.clickhouse</groupId>
                <artifactId>clickhouse-http-client</artifactId>
                <version>${clickhouse.jdbc.version}</version>
            </dependency>

            <!-- influxdb -->
            <dependency>
                <groupId>org.influxdb</groupId>
                <artifactId>influxdb-java</artifactId>
                <version>${influxdb.jdbc.version}</version>
            </dependency>

            <!-- | graph database | -->
            <dependency>
                <groupId>org.neo4j.driver</groupId>
                <artifactId>neo4j-java-driver</artifactId>
                <version>${neo4j.jdbc.version}</version>
            </dependency>

            <!-- | data channel | -->

            <!-- | search engine database | -->
            <!-- elasticsearch - opendistro-sql plugin : search engine database -->
            <!-- es sql plugin dependency -->
            <dependency>
                <groupId>com.amazon.opendistroforelasticsearch.client</groupId>
                <artifactId>opendistro-sql-jdbc</artifactId>
                <version>${opendistro-sql-jdbc.version}</version>
            </dependency>

            <!-- | file data | -->
            <!-- easyexcel
                [1] easyexcel - https://easyexcel.opensource.alibaba.com/ -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>

            <!-- | data serializable & json | -->
            <!-- jackson
                @url:https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-core/2.13.0/bundle
            -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- fastjson2 -->
            <!-- https://github.com/alibaba/fastjson2/releases -->
            <!--  -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>

            <!-- gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- | database connection management | -->
            <!-- druid | https://mvnrepository.com/artifact/com.alibaba/druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${dbpool-druid.version}</version>
            </dependency>

            <!-- | orm | -->
            <!-- mybatis : orm -->

            <!-- mybatis-plus : orm -->
            <!--
                @note mybatisplus base on `spring-boot-starter`(spring-boot-starter-parent) : 2.5+
                @link https://baomidou.com/
            -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <!-- mybatis-plus-boot-starter = {
                    spring-boot-dependencies , spring-cloud-commons, spring-boot-autoconfigure , spring-boot-starter-jdbc , spring-boot-configuration-processor, ...
                    , mybatis-thymeleaf, mybatis-velocity, mybatis-freemarker,
                    , mybatis-plus = { mybatis-plus-extension:3.5.2 = {
                        mybatis-spring, spring-jdbc , spring-context-support , ...
                        , fastjson:2.0.5 , gjson , ...
                        , mybatis-plus-core = {
                            mybatis:3.5.10, mybatis-redis, mybatis-encache
                            spring-aop,
                            idworker, jsqlparser:4.4
                            mybatis-plus-annotation = { mybatis:3.5.10 }
                       }
                    }
                -->
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-autoconfigure</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- ********** system-level basic framework -->
            <!-- | spring |
                @reference-doc [1] spring-cloud,spring-cloud-alibaba,spring-boot三者的兼容关系 - github - https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明
            -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- spring boot : spring -->
            <!-- spring-boot-starter-parent
                @url:https://search.maven.org/artifact/org.springframework.boot/spring-boot-starter-parent/2.2.13.RELEASE/pom
            -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId><!--父级工程:spring-boot-dependencies-->
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>mockito-core</artifactId>
                        <groupId>org.mockito</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>mockito-junit-jupiter</artifactId>
                        <groupId>org.mockito</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- spring cloud : spring -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- | data validation framework | start -->
            <!-- jakarta.validation-api : data validation api design standard & framework -->
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.validation-api.version}</version>
            </dependency>

            <!-- hibernate-validator | http://hibernate.org/validator/documentation | https://www.cnblogs.com/johnnyzen/p/17824475.html -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <!-- org.glassfish:javax.el or org.glassfish:jakarta.el [recommend] (2选1即可) | hibernate-validator 依赖此组件，以防报错:"javax.validation.ValidationException: HV000183: Unable to initialize 'javax.el.ExpressionFactory'. Check that you have the EL dependencies on the classpath, or use ParameterMessageInterpolator instead" -->
            <!--
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${glassfish.javax.el.version}</version>
            </dependency> -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${glassfish.jakarta.el.version}</version>
            </dependency>

            <!-- | data validation framework | end -->

            <!-- | web | -->
            <!-- servlet : web -->
            <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <!-- 4.0.1 -->
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- actuator (作用 : 健康检查 / 审计 / 统计 / 监控 / HTTP追踪) : system helper -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- | api document management | -->
            <!-- swagger : api document management -->
            <!-- @url : https://search.maven.org/artifact/io.swagger/swagger-annotations/2.0.0-rc2/bundle -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!-- @url : https://search.maven.org/artifact/io.swagger/swagger-annotations/2.0.0-rc2/bundle -->
            <!--            <dependency>-->
            <!--                <groupId>io.swagger</groupId>-->
            <!--                <artifactId>swagger-annotations</artifactId>-->
            <!--                <version>${swagger.v2.version}</version>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.v3.version}</version>
            </dependency>
            <!-- springfox-swagger -->
            <!-- @access-url : http://localhost:port/<context-path>/swagger-ui.html -->
            <!-- @url : https://swagger.io/docs//https://swagger.io/docs/specification/2-0/basic-structure/ -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springforx-swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springforx-swagger.version}</version>
            </dependency>
            <!-- swagger-bootstrap-ui -->
            <!-- @reference-doc :
                [1] https://blog.csdn.net/weixin_45630042/article/details/107416127
                [2] https://blog.csdn.net/qq_43446343/article/details/102984670-->
            <!-- @access-url : http://localhost:port/<context-path>/doc.html -->
            <!-- 如需要更好看的swagger-ui界面，可切换为本依赖 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger-bootstrap-ui.version}</version>
            </dependency>

            <!-- knife4j / Swagger-UI API Document : api document management
                 @reference-doc https://blog.csdn.net/adminwxc/article/details/127744816
            -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-annotations</artifactId>
                <version>${knife4j-annotations.version}</version>
            </dependency>

            <!-- | system communication & system security | -->
            <!-- jwt component
                @reference-doc
                    @link https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
                    @link https://gitee.com/love-connect-team/love-connect-im-service/blob/dev/pom.xml
                    @link https://gitee.com/love-connect-team/love-connect-im-service/blob/dev/im-service-common/src/main/java/cn/loveconnect/common/utils/TokenUtils.java
                    @link https://blog.csdn.net/AdminGuan/article/details/100147488
            -->
            <!-- jjwt | Token生成与解析【 使用 jjwt 的话，springBoot 版本不能太高，容易冲突。如果使用springBoot高版本，则需要使用jjwt-api】 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-gson</artifactId>
                <version>${jjwt-gson.version}</version>
            </dependency>

            <!-- ********** spring boot/cloud framework related components ********** -->

            <!-- nacos : configuration center & register center -->
            <!-- nacos configuration center -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>

            <!-- nacos register center -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>

            <!-- https://github.com/nacos-group/nacos-spring-boot-project/wiki/spring-boot-0.2.2-以及-0.1.2版本新功能使用手册 -->
            <!-- 版本 0.2.x.RELEASE 对应的是 SpringBoot2.x 版本; 版本 0.1.x.RELEASE 对应的是 SpringBoot1.x 版本 -->
            <!--<dependency>-->
            <!--<groupId>com.alibaba.boot</groupId>-->
            <!--<artifactId>nacos-config-spring-boot-starter</artifactId>-->
            <!--<version>${nacos-config-spring-boot-starter.version}</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--<groupId>com.alibaba.boot</groupId>-->
            <!--<artifactId>nacos-discovery-spring-boot-starter</artifactId>-->
            <!--<version>${nacos-discovery-spring-boot-starter.version}</version>-->
            <!--</dependency>-->
            <!-- https://search.maven.org/artifact/com.alibaba.nacos/nacos-spring-context -->
            <!--<dependency>-->
            <!--<groupId>com.alibaba.nacos</groupId>-->
            <!--<artifactId>nacos-spring-context</artifactId>-->
            <!--<version>1.1.0</version>-->
            <!--</dependency>-->

            <!-- feign : service call -->
            <!-- way 1 : spring-cloud-starter -->
            <!-- url:https://search.maven.org/remotecontent?filepath=org/springframework/cloud/spring-cloud-dependencies/Hoxton.SR12/spring-cloud-dependencies-Hoxton.SR12.pom -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-openfeign.version}</version>
            </dependency>
            <!-- way 2 : offcial dependencies -->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-core</artifactId>
                <version>${openfeign.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-slf4j</artifactId>
                <version>${openfeign.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-hystrix</artifactId>
                <version>${openfeign.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-java8</artifactId>
                <version>${openfeign.version}</version>
            </dependency>


            <!-- skywalking : trace request -->

            <!-- ********** third-party-service ********** -->

            <!-- ********** other dependency ********** -->


            <!-- ********** the current parent project's sub modules ********** -->
            <!--
            <dependency>
                <groupId>com.knowdata</groupId>
                <artifactId>knowdata-service-domain</artifactId>
                <version>${project.parent.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>lombok</artifactId>
                        <groupId>org.projectlombok</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.knowdata</groupId>
                <artifactId>knowdata-service-common</artifactId>
                <version>${project.parent.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>lombok</artifactId>
                        <groupId>org.projectlombok</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            -->

            <!--apacheskywalking-->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.skywalking</groupId>-->
            <!--                <artifactId>apm-toolkit-logback-1.x</artifactId>-->
            <!--                <version>${skywalking.apm-application-toolkit.version}</version>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.skywalking</groupId>-->
            <!--                <artifactId>apm-toolkit-log4j-1.x</artifactId>-->
            <!--                <version>${skywalking.apm-application-toolkit.version}</version>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.skywalking</groupId>-->
            <!--                <artifactId>apm-toolkit-log4j-2.x</artifactId>-->
            <!--                <version>${skywalking.apm-application-toolkit.version}</version>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.skywalking</groupId>-->
            <!--                <artifactId>apm-toolkit-trace</artifactId>-->
            <!--                <version>${skywalking.apm-application-toolkit.version}</version>-->
            <!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <!-- lock down plugins versions to a void using Maven defaults(maybe moved to parent pom)-->
            <plugins>
                <!-- clean lifecycle,see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <!-- default lifecycle,jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin-version}</version>
                </plugin>
                <!-- site lifecycle,see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>

                <!-- maven release plugin -->
                <!-- reference-doc:maven release流水线-https://mindoc.loveconnect.cn/docs/bigdata/bigdata-1e65kkjb8afmg -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <configuration>
                        <!-- 执行目标 | install : 发布到本地仓库, deploy:发布到私服仓库 -->
                        <goals>deploy</goals>
                        <!-- 是否生成 release-pom.xml -->
                        <generateReleasePoms>false</generateReleasePoms>
                        <!-- 跳过单元测试 -->
                        <arguments>-DskipTests</arguments>
                        <!-- 是否自动为子模块分配父工程版本。若设置为false，将提示用户输入每个子模块的版本 -->
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!-- tag分支的名称(project.version仅包含版本，不包含SNAPSHOT后缀) -->
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <!-- 发布时无需检查是否与VCS（SVN/GIT）相比发生修改的文件 -->
                        <checkModificationExcludes>
                            <checkModificationExclude>.project</checkModificationExclude>
                            <checkModificationExclude>.classpath</checkModificationExclude>
                            <checkModificationExclude>.gitignore</checkModificationExclude>
                            <checkModificationExclude>.properties</checkModificationExclude>
                            <checkModificationExclude>pom.xml</checkModificationExclude>
                            <checkModificationExclude>release-pom.xml</checkModificationExclude>
                            <checkModificationExclude>user-service-model/pom.xml</checkModificationExclude>
                            <checkModificationExclude>user-service-model/release-pom.xml</checkModificationExclude>
                            <checkModificationExclude>user-service-common/pom.xml</checkModificationExclude>
                            <checkModificationExclude>user-service-common/release-pom.xml</checkModificationExclude>
                            <!--<checkModificationExclude>user-service-dao/pom.xml</checkModificationExclude>-->
                            <!--<checkModificationExclude>user-service-dao/release-pom.xml</checkModificationExclude>-->
                            <checkModificationExclude>user-service-biz/pom.xml</checkModificationExclude>
                            <checkModificationExclude>user-service-biz/release-pom.xml</checkModificationExclude>
                            <!--<checkModificationExclude>user-service-api/pom.xml</checkModificationExclude>-->
                            <!--<checkModificationExclude>user-service-api/release-pom.xml</checkModificationExclude>-->
                        </checkModificationExcludes>
                    </configuration>
                </plugin>

                <!-- 添加git-commit-id-plugin插件，用以产生git版本信息 -->
                <!-- 1)用法1:mvncleangit-commit-id:revisioninstall -->
                <!-- 2)用法2:acturtor+`management.info.git.mode=full`=>http://127.0.0.1:9527/actuator/info -->
                <!-- reference-doc:https://blog.csdn.net/dyc87112/article/details/73739530 -->
                <!-- reference-doc:https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.build.generate-git-info -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                        </generateGitPropertiesFilename>
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    </configuration>
                </plugin>
                <!-- springboot plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                    <skipTests>false</skipTests>
                </configuration>
            </plugin>

            <!-- reference-doc:idea中使用maven配置sonar-CSDN-https://blog.csdn.net/weixin_43931108/article/details/116915196 -->
            <!-- sonar插件 -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <!--@reference-doc:
                [1] SonarQube本地配置-Mindoc-https://mindoc.loveconnect.cn/docs/bigdata/bigdata-1e6buemkng4f9
                [2] Java单元测试覆盖率分析，并同步至Sonar-博客园-https://www.cnblogs.com/king0207/p/14587357.html
            -->
            <!-- @description:可生成代码覆盖率统计数据 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                            <goal>prepare-agent-integration</goal>
                            <goal>report</goal>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-code-coverage-report</id>
                        <phase>test</phase><!-- 仅在执行mvntest命令中生效 -->
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <scm>
        <!-- 指定发布的链接 -->
        <connection>
            scm:git:ssh://git@github.com:know-data/know-data-parent.git
        </connection>
        <!-- 指定开发的链接 -->
        <developerConnection>
            scm:git:ssh://git@github.com:know-data/know-data-parent.git
        </developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!--    <distributionManagement>-->
    <!--        <repository>-->
    <!--            <id>central</id>-->
    <!--            <name>maven-release</name>-->
    <!--            <url>http://artifactory.know-data.com/artifactory/maven-release/</url>-->
    <!--        </repository>-->
    <!--        <snapshotRepository>-->
    <!--            <id>snapshots</id>-->
    <!--            <name>maven-snapshot</name>-->
    <!--            <url>http://artifactory.know-data.com/artifactory/maven-snapshot/</url>-->
    <!--        </snapshotRepository>-->
    <!--    </distributionManagement>-->

    <profiles>
        <!-- @note 本地扫描并上传sonar扫描报告时，取消本profile的注释，并执行本maven命令：mvn clean install sonar:sonar -->
        <!-- @function 增加sonarqube配置 -->
        <!-- @reference-doc:
                [1] SonarQube本地配置 - Mindoc - https://mindoc.know-data.com/docs/bigdata/xxx43435345
        -->
        <!--<profile>-->
        <!--<id>sonar</id>-->
        <!--<activation>-->
        <!--<activeByDefault>true</activeByDefault>-->
        <!--</activation>-->
        <!--<properties>-->
        <!--<sonar.host.url>https://sonarqube.know-data.com</sonar.host.url>-->
        <!--<sonar.login>svc-cicd</sonar.login>-->
        <!--<sonar.password>453453535efer34r3fe3</sonar.password>-->
        <!--</properties>-->
        <!--</profile>-->
    </profiles>

    <!-- Maven pom.xml 中添加指定的中央仓库 - CSDN - https://blog.csdn.net/tiantiandjava/article/details/50736343 -->
    <repositories>
<!--        <repository>
            <id>local-repo</id>
            <url>D:\Program_Data\maven_repository</url>
        </repository>-->

        <repository>
            <id>springsource-milestones</id>
            <name>SpringSource Milestones Proxy</name>
            <url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
        </repository>

        <repository>
            <!-- Maven 自带的中央仓库使用的Id为 central. 如果其他的仓库声明也是用该Id, 就会覆盖中央仓库的配置 -->
            <id>mvnrepository</id>
            <name>mvnrepository</name>
            <url>http://www.mvnrepository.com/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>